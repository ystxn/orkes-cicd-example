{
  "createTime": 1756284484943,
  "updateTime": 1756801959370,
  "name": "ecommerce-cart",
  "description": "ecommerce-cart",
  "version": 1,
  "tasks": [
    {
      "name": "do_while",
      "taskReferenceName": "do_while_ref",
      "inputParameters": {
        "action": "${workflow.variables.action}"
      },
      "type": "DO_WHILE",
      "decisionCases": {},
      "defaultCase": [],
      "forkTasks": [],
      "startDelay": 0,
      "joinOn": [],
      "optional": false,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopCondition": "(() => !$.action || $.action === 'MODIFY_CART')();",
      "loopOver": [
        {
          "name": "yield",
          "taskReferenceName": "yield_ref",
          "inputParameters": {},
          "type": "YIELD",
          "decisionCases": {},
          "defaultCase": [],
          "forkTasks": [],
          "startDelay": 0,
          "joinOn": [],
          "optional": false,
          "defaultExclusiveJoinTask": [],
          "asyncComplete": false,
          "loopOver": [],
          "onStateChange": {},
          "permissive": false
        },
        {
          "name": "set_action_cart",
          "taskReferenceName": "set_action_cart_ref",
          "inputParameters": {
            "cart": "${yield_ref.output.cart}",
            "action": "${yield_ref.output.action}"
          },
          "type": "SET_VARIABLE",
          "decisionCases": {},
          "defaultCase": [],
          "forkTasks": [],
          "startDelay": 0,
          "joinOn": [],
          "optional": false,
          "defaultExclusiveJoinTask": [],
          "asyncComplete": false,
          "loopOver": [],
          "onStateChange": {},
          "permissive": false
        },
        {
          "name": "switch",
          "taskReferenceName": "switch_ref",
          "inputParameters": {
            "action": "${yield_ref.output.action}"
          },
          "type": "SWITCH",
          "decisionCases": {
            "MODIFY_CART": [
              {
                "name": "append_logs",
                "taskReferenceName": "append_logs_ref",
                "inputParameters": {
                  "expression": "(() => {\n  const logs = $.logs || [];\n  const date = new Date().toISOString();\n  const log = { date, item: $.item, quantity: $.quantity };\n  return [ ...logs, log ];\n})();",
                  "evaluatorType": "graaljs",
                  "logs": "${workflow.variables.logs}",
                  "item": "${yield_ref.output.item}",
                  "quantity": "${yield_ref.output.quantity}"
                },
                "type": "INLINE",
                "decisionCases": {},
                "defaultCase": [],
                "forkTasks": [],
                "startDelay": 0,
                "joinOn": [],
                "optional": false,
                "defaultExclusiveJoinTask": [],
                "asyncComplete": false,
                "loopOver": [],
                "onStateChange": {},
                "permissive": false
              },
              {
                "name": "set_logs",
                "taskReferenceName": "set_logs_ref",
                "inputParameters": {
                  "logs": "${append_logs_ref.output.result}"
                },
                "type": "SET_VARIABLE",
                "decisionCases": {},
                "defaultCase": [],
                "forkTasks": [],
                "startDelay": 0,
                "joinOn": [],
                "optional": false,
                "defaultExclusiveJoinTask": [],
                "asyncComplete": false,
                "loopOver": [],
                "onStateChange": {},
                "permissive": false
              }
            ]
          },
          "defaultCase": [],
          "forkTasks": [],
          "startDelay": 0,
          "joinOn": [],
          "optional": false,
          "defaultExclusiveJoinTask": [],
          "asyncComplete": false,
          "loopOver": [],
          "evaluatorType": "value-param",
          "expression": "action",
          "onStateChange": {},
          "permissive": false
        }
      ],
      "evaluatorType": "graaljs",
      "onStateChange": {},
      "permissive": false
    },
    {
      "name": "process-payment",
      "taskReferenceName": "process-payment_ref",
      "inputParameters": {
        "uri": "https://orkes-api-tester.orkesconductor.com/api",
        "method": "GET",
        "accept": "application/json",
        "contentType": "application/json",
        "encode": true
      },
      "type": "HTTP",
      "decisionCases": {},
      "defaultCase": [],
      "forkTasks": [],
      "startDelay": 0,
      "joinOn": [],
      "optional": false,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopOver": [],
      "onStateChange": {},
      "permissive": false
    },
    {
      "name": "send-notification",
      "taskReferenceName": "send-notification_ref",
      "inputParameters": {
        "uri": "https://orkes-api-tester.orkesconductor.com/api",
        "method": "GET",
        "accept": "application/json",
        "contentType": "application/json",
        "encode": true
      },
      "type": "HTTP",
      "decisionCases": {},
      "defaultCase": [],
      "forkTasks": [],
      "startDelay": 0,
      "joinOn": [],
      "optional": false,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopOver": [],
      "onStateChange": {},
      "permissive": false
    }
  ],
  "inputParameters": [],
  "outputParameters": {},
  "failureWorkflow": "",
  "schemaVersion": 2,
  "restartable": true,
  "workflowStatusListenerEnabled": false,
  "ownerEmail": "yongsheng.tan@orkes.io",
  "timeoutPolicy": "ALERT_ONLY",
  "timeoutSeconds": 0,
  "variables": {},
  "inputTemplate": {},
  "enforceSchema": true,
  "metadata": {},
  "maskedFields": [],
  "overwriteTags": true,
  "tags": [
    {
      "key": "app",
      "value": "ecommerce"
    }
  ]
}
